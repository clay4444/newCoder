稳定：
冒泡排序， 插入排序，归并排序，计数排序，基数排序，桶排序

不稳定：
选择排序
	2,2,2,1   选择排序，会把1选中，放在最前面，和第一个2交换，此时就破坏了稳定性
快速排序
	4,3,3,3,5   假如随机选中中间的3，那么左右两边的3要么划分到3左边的位置，要么划分到3右边的位置
希尔排序
	5,1,1,5	比如第一个5，假如步长是2，那么5就会和第2个1交换位置，此时就破坏了稳定性
堆排序
	比如说5,5,5    当建立好大顶堆之后，堆顶元素会放到最后面去，此时就破坏了稳定性
	

时间复杂度为O(N)的算法：计数排序和基数排序，基于桶排序的。
时间复杂度为O(n*logN)的算法：堆排序，归并排序，希尔排序，快速排序
时间复杂度为O(n*n)的算法：冒泡排序，选择排序，插入排序

工程上的排序：数组个数小的时候：插入排序：插入排序的过程与原始顺序有关
		   数组个数多的时候：选择时间复杂度为O(n*logN)的算法

1， 几乎有序的数组：改进后的堆排序：每次都在大小为K的子数组中进行排序，时间复杂度O(n*logk)
2， 判断数组是否有重复值：空间复杂度O(1)：如果没有空间复杂度的限制，应该用哈希表，空间复杂度O(n)，时间复杂度O(n)，
						  所以应该先排序，再遍历，空间复杂度O(1)的最快的排序方式：堆排序，要写非递归版本的。递归版本的空间复杂度是logN(层数)，函数栈

3, 把两个有序数组和成一个数组，第一个数组空间正好可以容纳所有元素。
						从后往前覆盖即可。
						  
						 